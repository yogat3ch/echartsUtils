% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/js_helpers.R
\name{js_num2str}
\alias{js_num2str}
\title{An JS callback formatting function}
\usage{
js_num2str(
  js_parameters = c("value", "index"),
  n = "value",
  sf = NULL,
  add_suffix = NULL,
  suffix_lb = NULL,
  format = NULL,
  magnitude = NULL,
  add_commas = NULL
)
}
\arguments{
\item{js_parameters}{\code{chr} the parameters to pass to the Javascript Callback function}

\item{n}{\code{chr} The javascript value to pass as \code{n}, the number to be transformed by \code{num2str}}

\item{sf}{\code{int} significant figures of output \strong{Default: 2}}

\item{add_suffix}{\code{lgl}  whether to add a letter suffix \strong{Default: FALSE}}

\item{suffix_lb}{\code{chr} The lower bound of the divisor (IE "M" do not go lower than millions) \strong{Default: ''} for no lower bound}

\item{format}{\code{lgl} whether to reduce the magnitude when formatting \strong{Default: TRUE}}

\item{magnitude}{\code{chr} If the magnitude is known apriori this can be used to override the factoring \strong{Default: NULL}}

\item{add_commas}{\code{lgl} Format the numeric string output with commas every thousands place. \strong{Default: FALSE}}
}
\value{
The JS callback function as a string with appropriate arguments
}
\description{
An JS callback formatting function
}
\details{
The Javascript function is provided below for reference:

\if{html}{\out{<div class="sourceCode">}}\preformatted{#> Warning in file(con, "r"): file("") only supports open = "w+" and open = "w+b":
#> using the former
}\if{html}{\out{</div>}}
}
